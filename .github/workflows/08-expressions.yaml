name: 08 - Using variables

on:     
    workflow_dispatch:
        inputs: 
            debug:
                type: boolean
                default: false
    #push:

env:
    WORKFLOW_VAR: "I am a workflow env var"
    OVERWRITTEN: "I will be overwritten"
    UNDEFINED_VAR_WITH_DEFAULT: ${{ vars.UNDEFINED_VAR || 'default value' }}
jobs: 
    echo-data:
        runs-on: ubuntu-latest
        env:
            JOB_VAR: "I am a job env var"
            OVERWRITTEN: "I have been overwritten at the job level"
        steps:   
            - name: Print env vars
              env:
                STEP_VAR: "I am a step env var"
                step_var2: "I am another step var"
              run: |
                echo "Step env var: $STEP_VAR"
                echo "Step env var 2: $step_var2"
                echo "Job env var: $JOB_VAR"
                echo "Workflow env var: $WORKFLOW_VAR"
                echo "Overwritten: $OVERWRITTEN"
            - name: Overwrite job variable
              env:
                OVERWRITTEN: "Alex overwrote me..."
              run: |
                echo "Overwritten or not: $OVERWRITTEN"
    echo2:
        runs-on: ubuntu-latest
        steps: 
            - name: Print variables
              run: |
                echo "Repo var:  ${{ vars.REPOSITORY_VAR }}"
    echo-prod:
        runs-on: ubuntu-latest
        environment: prod
        steps: 
            - name: Print prod variables
              run: |
                echo "Org var:  ${{ vars.OVERWRITTEN_VAR  }}"
                echo "Repo var:  ${{ vars.REPOSITORY_VAR }}"
                echo "Env var:  ${{ vars.TARGET_VAR  }}"
    echo-undefined:
        runs-on: ubuntu-latest
        steps: 
            - name: Print undefined variables
              run: |
                echo "Undefined vars with default:  ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"
