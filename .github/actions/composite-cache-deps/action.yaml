name: Cache Node and NPM dependencies
description: This action allows to cache both Node and NPM dependencies based on the package-lock.json file
inputs:
  node-version:
    required: true
    description: NodeJS version to use
    default: 20.x
  working-dir:
    required: false
    description: The working directory of the application
    default: .
  target-env: 
    required: false
    description: dev or prod. Controlls whether dev dependencies are installed
    default: dev

runs:
  using: composite
  steps: 
    - name: Print the variables passed
      env:
        NODE_VERSION: ${{ inputs.node-version }}
        TARGET_ENV: ${{ inputs.target-env }}
      run: |
        echo "Node version: $NODE_VERSION, Env: $TARGET_ENV"
      shell: bash

    - name: Setup NodeJS version ${{ inputs.node-version }}
      uses: actions/setup-node@v4
      with:
          node-version: ${{ inputs.node-version }}

    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with: 
        path: ${{ inputs.working-dir }}/node_modules
        key: deps-node-modules-${{ hashFiles('${{ inputs.working-dir }}/package-lock.json') }}

    - name: Print omit flag
      env: 
        omit: ${{ 'prod' == 'dev' && '--omit=dev' || '' }}
      run: echo "The value of omit flag is $omit"
      shell: bash

    - name: Install dependencies
      env: 
        omit: ${{ inputs.target-env == 'dev' && '--omit=dev' || '' }}
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: ${{ inputs.working-dir }}
      run: npm ci $omit
      shell: bash
    